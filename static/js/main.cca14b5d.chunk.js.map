{"version":3,"sources":["components/FeedbackForm/FeedbackOptions.module.css","components/Section/Section.module.css","components/Container/Container.module.css","components/Notification/Notification.module.css","components/Statistics/Statistics.module.css","components/Container/Container.jsx","components/Section/Section.jsx","components/FeedbackForm/FeedbackOptions.jsx","components/Notification/Notification.jsx","components/Statistics/Statistics.jsx","components/App/App.js","index.js"],"names":["module","exports","Container","children","className","s","container","Section","title","section","FeedbackForm","options","onLeaveFeedback","buttonList","map","option","buttonItem","button","type","onClick","Notification","message","Statistics","props","good","neutral","bad","total","positivePercentage","prop","statisticsItem","Object","keys","values","App","state","handleIncrement","e","targetButton","currentTarget","style","backgroundColor","setTimeout","setState","prevState","key","textContent","toLowerCase","this","reduce","feedback","countTotalFeedback","Math","round","FeedbackOptions","countPositiveFeedbackPercentage","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,WAAa,oCAAoC,WAAa,oCAAoC,OAAS,kC,iBCA7HD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,yB,oBCA7DD,EAAOC,QAAU,CAAC,UAAY,+B,gBCA9BD,EAAOC,QAAU,CAAC,QAAU,gC,gBCA5BD,EAAOC,QAAU,CAAC,eAAiB,qC,4KCUpBC,MARf,YAAkC,IAAbC,EAAY,EAAZA,SACnB,OAAO,qBAAKC,UAAWC,IAAEC,UAAlB,SAA8BH,K,gBCaxBI,MAdf,YAAuC,IAApBC,EAAmB,EAAnBA,MAAOL,EAAY,EAAZA,SACxB,OACE,0BAASC,UAAWC,IAAEI,QAAtB,UACE,qBAAIL,UAAWC,IAAEG,MAAjB,cAA0BA,KACzBL,M,gBCeQO,MAnBf,YAAqD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAC/B,OACE,oBAAIR,UAAWC,IAAEQ,WAAjB,SACGF,EAAQG,KAAI,SAAAC,GAAM,OACjB,oBAAiBX,UAAWC,IAAEW,WAA9B,SACE,wBAAQZ,UAAWC,IAAEY,OAAQC,KAAK,SAASC,QAASP,EAApD,SACGG,KAFIA,S,iBCIFK,MARf,YAAoC,IAAZC,EAAW,EAAXA,QACtB,OAAO,mBAAGjB,UAAWC,IAAEgB,QAAhB,SAA0BA,K,iBC0BpBC,MA3Bf,YAAwE,IAChEC,EAAQ,CACZ,CAAEC,KAFiE,EAAjDA,MAGlB,CAAEC,QAHiE,EAA3CA,SAIxB,CAAEC,IAJiE,EAAlCA,KAKjC,CAAEC,MALiE,EAA7BA,OAMtC,CAAEC,mBANiE,EAAtBA,qBAQ/C,OACE,6BACGL,EAAMT,KAAI,SAAAe,GAAI,OACb,qBAAIzB,UAAWC,IAAEyB,eAAjB,UACGC,OAAOC,KAAKH,GADf,KACwBE,OAAOE,OAAOJ,KADAE,OAAOC,KAAKH,UC6D3CK,E,4MAnEbC,MAAQ,CACNX,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPU,gBAAkB,SAAAC,GAChB,IAAMC,EAAeD,EAAEE,cACvBD,EAAaE,MAAMC,gBAAkB,qBACrCC,YAAW,WACTJ,EAAaE,MAAMC,gBAAkB,uBACpC,KAEH,EAAKE,UAAS,SAAAC,GACZ,IAAK,IAAMC,KAAO,EAAKV,MACrB,GAAIU,IAAQP,EAAaQ,YAAYC,cACnC,OAAO,eACJF,EAAMD,EAAUC,GAAO,O,mEAQhC,OAAOd,OAAOE,OAAOe,KAAKb,OAAOc,QAC/B,SAACtB,EAAOuB,GAAR,OAAqBvB,EAAQuB,IAC7B,K,wDAI+B,IACzB1B,EAASwB,KAAKb,MAAdX,KACR,OAAOwB,KAAKG,qBAAL,UACAC,KAAKC,MAAO7B,EAAOwB,KAAKG,qBAAwB,KADhD,eAEAH,KAAKG,qBAFL,O,+BAKC,IAAD,EACwBH,KAAKb,MAA5BX,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACvB,OACE,eAAC,EAAD,WACE,cAAC,EAAD,CAASlB,MAAM,8BAAf,SACE,cAAC8C,EAAD,CACE3C,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBAAiBoC,KAAKZ,oBAI1B,cAAC,EAAD,CAAS5B,MAAM,aAAf,SACGwC,KAAKG,qBACJ,cAAC,EAAD,CACE3B,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOqB,KAAKG,qBACZvB,mBAAoBoB,KAAKO,oCAG3B,cAAC,EAAD,CAAclC,QAAQ,+B,GA5DhBmC,aCDlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.cca14b5d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonList\":\"FeedbackOptions_buttonList__3aktE\",\"buttonItem\":\"FeedbackOptions_buttonItem__37fiu\",\"button\":\"FeedbackOptions_button__25zJR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__50f_T\",\"title\":\"Section_title__2DD0Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__33_gO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Notification_message__3-0PC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statisticsItem\":\"Statistics_statisticsItem__1X1sp\"};","import PropTypes from 'prop-types';\nimport s from './Container.module.css';\n\nfunction Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n\nContainer.propTypes = {\n  children: PropTypes.any.isRequired,\n};\n\nexport default Container;\n","import PropTypes from 'prop-types';\nimport s from './Section.module.css';\n\nfunction Section({ title, children }) {\n  return (\n    <section className={s.section}>\n      <h2 className={s.title}> {title}</h2>\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.any.isRequired,\n};\n\nexport default Section;\n","import PropTypes from 'prop-types';\nimport s from './FeedbackOptions.module.css';\n\nfunction FeedbackForm({ options, onLeaveFeedback }) {\n  return (\n    <ul className={s.buttonList}>\n      {options.map(option => (\n        <li key={option} className={s.buttonItem}>\n          <button className={s.button} type=\"button\" onClick={onLeaveFeedback}>\n            {option}\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nFeedbackForm.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackForm;\n","import PropTypes from 'prop-types';\nimport s from './Notification.module.css';\n\nfunction Notification({ message }) {\n  return <p className={s.message}>{message}</p>;\n}\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import PropTypes from 'prop-types';\nimport s from './Statistics.module.css';\n\nfunction Statistics({ good, neutral, bad, total, positivePercentage }) {\n  const props = [\n    { good },\n    { neutral },\n    { bad },\n    { total },\n    { positivePercentage },\n  ];\n  return (\n    <ul>\n      {props.map(prop => (\n        <li className={s.statisticsItem} key={Object.keys(prop)}>\n          {Object.keys(prop)}: {Object.values(prop)}\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.string.isRequired,\n};\n\nexport default Statistics;\n","import React, { Component } from 'react';\nimport Container from '../Container/Container';\nimport Section from '../../components/Section/Section';\nimport FeedbackOptions from '../../components/FeedbackForm/FeedbackOptions';\nimport Notification from '../../components/Notification/Notification';\nimport Statistics from '../../components/Statistics/Statistics';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleIncrement = e => {\n    const targetButton = e.currentTarget;\n    targetButton.style.backgroundColor = 'rgb(126, 179, 247)';\n    setTimeout(() => {\n      targetButton.style.backgroundColor = 'rgb(239, 239, 239)';\n    }, 100);\n\n    this.setState(prevState => {\n      for (const key in this.state) {\n        if (key === targetButton.textContent.toLowerCase()) {\n          return {\n            [key]: prevState[key] + 1,\n          };\n        }\n      }\n    });\n  };\n\n  countTotalFeedback() {\n    return Object.values(this.state).reduce(\n      (total, feedback) => total + feedback,\n      0,\n    );\n  }\n\n  countPositiveFeedbackPercentage() {\n    const { good } = this.state;\n    return this.countTotalFeedback()\n      ? `${Math.round((good / this.countTotalFeedback()) * 100)}%`\n      : `${this.countTotalFeedback()}%`;\n  }\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    return (\n      <Container>\n        <Section title=\"Please, leave your feedback\">\n          <FeedbackOptions\n            options={['good', 'neutral', 'bad']}\n            onLeaveFeedback={this.handleIncrement}\n          />\n        </Section>\n\n        <Section title=\"Statistics\">\n          {this.countTotalFeedback() ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={this.countTotalFeedback()}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n            ></Statistics>\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}